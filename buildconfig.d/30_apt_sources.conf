#!/bin/bash

## Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

true "whonix_build_on_operating_system: $whonix_build_on_operating_system"

if [ "$whonix_build_sources_list_newer" = "" ]; then
   if [ "$whonix_build_sources_clearnet_or_onion" = "clearnet" ]; then
      whonix_build_sources_list_newer="$WHONIX_SOURCE_FOLDER/build_sources/debian_testing_current_clearnet.list"
   else
      whonix_build_sources_list_newer="$WHONIX_SOURCE_FOLDER/build_sources/debian_testing_current_onion.list"
   fi
fi
if [ "$whonix_build_sources_list_primary" = "" ]; then
   if [ "$BUILD_RELEASE" = "xenial" ]; then
      if [ "$whonix_build_sources_clearnet_or_onion" = "clearnet" ]; then
         whonix_build_sources_list_primary="$WHONIX_SOURCE_FOLDER/build_sources/ubuntu_xenial_clearnet.list"
      else
         error "unsupported for this --release BUILD_RELEASE"
      fi
   elif [ "$BUILD_RELEASE" = "bionic" ]; then
      if [ "$whonix_build_sources_clearnet_or_onion" = "clearnet" ]; then
         whonix_build_sources_list_primary="$WHONIX_SOURCE_FOLDER/build_sources/ubuntu_bionic_clearnet.list"
      else
         error "unsupported for this --release BUILD_RELEASE"
      fi
   else
      if [ "$whonix_build_sources_clearnet_or_onion" = "clearnet" ]; then
         whonix_build_sources_list_primary="$WHONIX_SOURCE_FOLDER/build_sources/debian_stable_current_clearnet.list"
      else
         whonix_build_sources_list_primary="$WHONIX_SOURCE_FOLDER/build_sources/debian_stable_current_onion.list"
      fi
   fi
fi

true "whonix_build_sources_list_primary      : $whonix_build_sources_list_primary"
true "whonix_build_sources_list_newer        : $whonix_build_sources_list_newer"

if [ "$whonix_build_apt_stable_release" = "" ]; then
   temp_="$(grep --invert-match "#" "$whonix_build_sources_list_primary")"
   temp_="$(echo "$temp_" | grep "deb")"
   temp_="$(echo "$temp_" | timeout 3 tail -1)"
   read deb_ uri_ distri_ component_ _ <<< "$temp_"
   whonix_build_apt_stable_release="$distri_"
   ## example whonix_build_apt_stable_release
   ## buster
fi

true "whonix_build_apt_stable_release        : $whonix_build_apt_stable_release"

if [ "$whonix_build_apt_sources_mirror" = "" ]; then
   temp_="$(grep --invert-match "#" "$whonix_build_sources_list_primary")"
   temp_="$(echo "$temp_" | grep "deb")"
   temp_="$(echo "$temp_" | timeout 3 tail -1)"
   read deb_ uri_ distri_ component_ _ <<< "$temp_"
   ## Used for:
   ## cowbuilder (debootstrap)
   ## grml-debootstrap (debootstrap) (VM builds only)
   ## debootstrap does not work with 'tor+', therefore removed.
   whonix_build_apt_sources_mirror="$(echo "$uri_" | sed "s|tor+||g")"
   ## examples whonix_build_apt_sources_mirror:
   ## http://ftp.us.debian.org/debian
   ## http://HTTPS///deb.debian.org/debian
   ## http://vwakviie2ienjx6t.onion/debian
fi

## export so it can be read by genmkfile.
export whonix_build_apt_sources_mirror

true "whonix_build_apt_sources_mirror        : $whonix_build_apt_sources_mirror"

## export so it can be read by genmkfile.
make_cowbuilder_mirror="$whonix_build_apt_sources_mirror"
export make_cowbuilder_mirror

if [ "$whonix_build_apt_newer_release_codename" = "" ]; then
   temp_="$(grep --invert-match "#" "$whonix_build_sources_list_newer")"
   temp_="$(echo "$temp_" | grep "deb")"
   temp_="$(echo "$temp_" | timeout 3 tail -1)"
   read deb_ uri_ distri_ component_ _ <<< "$temp_"
   whonix_build_apt_newer_release_codename="$distri_"
   ## example whonix_build_apt_newer_release_codename:
   ## sid
fi

true "whonix_build_apt_newer_release_codename: $whonix_build_apt_newer_release_codename"

## Example temp_:
## deb http://snapshot.debian.org/archive/debian/20140727T221338Z/ stable main
## Example deb_:
## deb
## Example uri_:
## http://snapshot.debian.org/archive/debian/20140727T221338Z/
## Example distri_:
## stable
## Example component_:
## main

if [ "$whonix_build_sources_list_torproject" = "" ]; then
   if [ "$whonix_build_sources_clearnet_or_onion" = "clearnet" ]; then
      whonix_build_sources_list_torproject="$WHONIX_SOURCE_FOLDER/build_sources/torproject_stable_current_clearnet.list"
   else
      whonix_build_sources_list_torproject="$WHONIX_SOURCE_FOLDER/build_sources/torproject_stable_current_onion.list"
   fi
fi

if [ "$whonix_build_sources_list_debian_sid" = "" ]; then
   if [ "$whonix_build_sources_clearnet_or_onion" = "clearnet" ]; then
      whonix_build_sources_list_debian_sid="$WHONIX_SOURCE_FOLDER/build_sources/debian_sid_current_clearnet.list"
   else
      whonix_build_sources_list_debian_sid="$WHONIX_SOURCE_FOLDER/build_sources/debian_sid_current_onion.list"
   fi
fi

if [ "$build_remote_repo_enable" = "true" ]; then
   WHONIX_APT_REPOSITORY_OPTS="--enable --codename $whonix_build_apt_stable_release"
   export WHONIX_APT_REPOSITORY_OPTS
fi

if [ "$build_remote_derivative_pkgs" = "true" ]; then
   if [ "$apt_target_key_derivative" = "" ]; then
      apt_target_key_derivative="/etc/apt/trusted.gpg.d/whonix-temp.gpg"
   fi

   if [ "$sources_list_target_build_remote_derivative" = "" ]; then
      sources_list_target_build_remote_derivative="$WHONIX_SOURCES_LIST_TEMP_BUILD_FILE"
   fi

   if [ "$codename_build_remote_derivative" = "" ]; then
      codename_build_remote_derivative="${whonix_build_apt_stable_release}-developers"
   fi

   if [ "$sources_list_build_remote_derivative" = "" ]; then
      if [ "$whonix_build_sources_clearnet_or_onion" = "clearnet" ]; then
         sources_list_build_remote_derivative="deb http://HTTPS///deb.whonix.org $codename_build_remote_derivative main contrib non-free"
      else
         sources_list_build_remote_derivative="deb tor+http://deb.dds6qkxpwdeubwucdiaord2xgbbeyds25rbsgr73tbfpqpt4a6vjwsyd.onion $codename_build_remote_derivative main contrib non-free"
      fi
   fi
fi

## Whonix/packages/usability-misc/usr/bin/whonix-repo-add parses this.
export apt_target_key_derivative
export sources_list_build_remote_derivative
export sources_list_target_build_remote_derivative
